import { NextResponse } from 'next/server';
import type { NextRequest } from 'next/server';

// This function can be marked `async` if using `await` inside
export function middleware(request: NextRequest) {
  // Get the path of the request
  const path = request.nextUrl.pathname;
  
  // Define paths that are considered public (don't require authentication)
  const isPublicPath = path.startsWith('/auth') || 
                       path === '/api/auth/login' || 
                       path === '/api/auth/register';
  
  // Check if the user has a token
  const token = request.cookies.get('authToken')?.value || '';
  
  // If user is on a public path and has a token, redirect to home
  if (isPublicPath && token) {
    return NextResponse.redirect(new URL('/', request.url));
  }
  
  // If user is not on a public path and has no token, redirect to login
  if (!isPublicPath && !token) {
    // Remember where they were trying to go for after login
    const url = new URL('/auth/login', request.url);
    url.searchParams.set('callbackUrl', encodeURI(request.url));
    return NextResponse.redirect(url);
  }
  
  // Otherwise, continue as normal
  return NextResponse.next();
}

// Configure which paths this middleware applies to
export const config = {
  matcher: [
    // Apply to all paths except static files, api routes that don't need auth, etc.
    '/((?!_next/static|_next/image|favicon.ico|public).*)',
  ],
};